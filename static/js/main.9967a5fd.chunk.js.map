{"version":3,"sources":["components/Buger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Buger/BuildControls/BuildControl/BuildControl.module.css","components/UI/FormInput/FormInput.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/SideDrawer/SideDrawerToggle/SideDrawerToggle.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Buger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","containers/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/UI/Backdrop/Backdrop.module.css","components/Buger/Burger.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Modal/Modal.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Checkout/ContactData/ContactData.module.css","components/Order/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawerToggle/SideDrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Buger/BurgerIngredient/BurgerIngredient.js","components/Buger/Burger.js","components/Buger/BuildControls/BuildControl/BuildControl.js","components/Buger/BuildControls/BuildControls.js","components/UI/Spinner/Spinner.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Buger/OrderSummary/OrderSummary.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/orders.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/FormInput/FormInput.js","components/Checkout/ContactData/ContactData.js","components/Checkout/Checkout.js","components/Order/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility/utility.js","store/reducers/burgerBuilder.js","store/reducers/orders.js","store/reducers/auth.js","index.js"],"names":["module","exports","Logo","height","className","classes","src","burgerLogo","alt","NavigationItem","children","link","exact","to","activeClassName","active","NavigationItems","isAuth","SideDrawerToggle","clicked","Hamburger","onClick","HamburgerBox","HamburgerInner","Toolbar","sideDrawerClicked","DesktopOnly","Backdrop","showBackdrop","hideBackdrop","SideDrawer","closeSieDrawer","openSideDrawer","attachedClasses","Close","Open","Fragment","join","Layout","state","displayingSideDrawer","closingSideDrawerHandler","setState","displaySideDrawerHandler","prevState","this","props","isAuthenticated","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Burger","ingredients","transformedIngredients","Object","keys","map","ingredientKey","Array","_","index","key","reduce","arr","el","concat","length","BuildControl","labelName","add","remove","disabled","Label","More","Less","controls","label","BuildControls","addIngredient","removeIngredient","price","purchaseable","purchaseOrder","toFixed","ctr","OrderButton","Spinner","Loader","React","memo","show","Modal","style","transform","opacity","Button","btnType","OrderSummary","cancelPurchase","proceedWithPurchase","ingredientsSummary","textTransform","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseControl","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseProceedHandler","onPurchaseInit","updatePurchaseState","sum","onInitIngredients","disabledInfo","burger","orderSummary","onAddedIngredient","onRemovedIngredient","totalPrice","burgerBuilder","ingName","ingredientName","get","then","data","catch","err","actions","CheckoutSummary","checkoutCancelled","checkoutContinued","width","margin","FormInput","elementType","elementConfig","value","change","invalid","validationIsRequired","touched","inputElement","inputClasses","Input","Invalid","onChange","options","option","displayValue","ContactData","orderForm","name","id","placeholder","validation","required","valid","email","isEmail","street","zipCode","minLength","maxLength","isNumeric","country","deliveryMethod","formIsValid","checkValidity","rules","isValid","trim","test","orderHandler","event","preventDefault","formData","formElementIndentifier","order","orderData","onPurchaseBurger","inputChangeHandler","inputIdentifier","copiedOrderForm","copiedFromElements","target","ordeFormElementsArray","config","listOfInputFields","form","onSubmit","loading","orders","post","orderID","purchaseBurgerSuccess","purchased","match","checkoutSummary","purchaseRedirect","goBack","replace","component","Order","personName","ingredientsArray","ingredientCount","ingredientsOutput","ing","dislay","border","padding","Number","parseFloat","Orders","onFetchOrders","queryParams","fetchOrdersSuccess","Auth","password","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","formElementsArray","errorMessage","authRedirect","building","authData","returnSecureToken","url","setItem","Date","getTime","expiresIn","localId","Logout","onLogout","App","onTryAutoSignup","routes","Checkout","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","bacon","meat","action","updatedIngredient","updatedState","setInitialIngredients","fetchIngredientsFailed","reducer","purchaseBurgerStart","purchaseBurgerFail","orderWithId","purchaseInit","fetchOrdersStart","fetchOrdersFail","authStart","authFail","authLogout","rootReducer","combineReducers","burgerBuilderReducer","ordersReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.9967a5fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2m-8G\",\"BreadTop\":\"BurgerIngredient_BreadTop__22i8l\",\"Seeds1\":\"BurgerIngredient_Seeds1__eQEkZ\",\"Seeds2\":\"BurgerIngredient_Seeds2__vGPf1\",\"Meat\":\"BurgerIngredient_Meat__2831O\",\"Cheese\":\"BurgerIngredient_Cheese__3PpaG\",\"Salad\":\"BurgerIngredient_Salad__2_xO7\",\"Bacon\":\"BurgerIngredient_Bacon__3ubTp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__X9YOa\",\"Open\":\"SideDrawer_Open__3u2b-\",\"Close\":\"SideDrawer_Close__Xx54A\",\"Logo\":\"SideDrawer_Logo__3rwyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2W0Db\",\"Label\":\"BuildControl_Label__1jIFS\",\"Less\":\"BuildControl_Less__2cibO\",\"More\":\"BuildControl_More__brfBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"FormInput_Input__3Dekx\",\"Label\":\"FormInput_Label__1Ekl2\",\"InputElement\":\"FormInput_InputElement__3CLEo\",\"Invalid\":\"FormInput_Invalid__1yMRn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__eYrRd\",\"Logo\":\"Toolbar_Logo__BXC4w\",\"DesktopOnly\":\"Toolbar_DesktopOnly__cbVr2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Hamburger\":\"SideDrawerToggle_Hamburger__3siDJ\",\"HamburgerBox\":\"SideDrawerToggle_HamburgerBox__3wDu7\",\"HamburgerInner\":\"SideDrawerToggle_HamburgerInner__1szU_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__r_256\",\"active\":\"NavigationItem_active__i8DXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1io3s\",\"OrderButton\":\"BuildControls_OrderButton__1vMMs\",\"enable\":\"BuildControls_enable__1Y82s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1XFrq\",\"Success\":\"Button_Success__18o4c\",\"Danger\":\"Button_Danger__NAREZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1AcKK\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1LUwi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__131Fo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1R2oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__YbKaU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1GoCE\",\"load2\":\"Spinner_load2__21DxN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3IPaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3yam_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1OyzO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3xET3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__XXipb\"};","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css'\r\n\r\nconst Logo = ({height}) => {\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={burgerLogo} alt=\"MyBurgerLogo\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './NavigationItem.module.css'\r\n\r\nconst NavigationItem = ({ children, link, exact }) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink \r\n                to={link}\r\n                exact={exact}\r\n                activeClassName={classes.active}>{children}</NavLink>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst NavigationItems = ({isAuth}) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem exact link='/'>Burger Builder</NavigationItem>\r\n            {isAuth ? <NavigationItem link='/orders'>Orders</NavigationItem> : null}\r\n            {isAuth \r\n            ? <NavigationItem link=\"/logout\">Logout</NavigationItem>\r\n            : <NavigationItem link=\"/auth\">Authenticate</NavigationItem>}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './SideDrawerToggle.module.css'\r\n\r\nconst SideDrawerToggle = ({ clicked }) => {\r\n    return (\r\n        <button \r\n            className={classes.Hamburger}\r\n            onClick={clicked}>\r\n            <span className={classes.HamburgerBox}>\r\n                <span className={classes.HamburgerInner}></span>\r\n            </span>\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default SideDrawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems'\r\nimport SideDrawerToggle from '../SideDrawer/SideDrawerToggle/SideDrawerToggle'\r\n\r\nconst Toolbar = ({sideDrawerClicked, isAuth}) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <SideDrawerToggle clicked={sideDrawerClicked}/>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems isAuth={isAuth}/>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = ({ showBackdrop, hideBackdrop }) => (\r\n    showBackdrop ? <div \r\n        className={classes.Backdrop}\r\n        onClick={hideBackdrop}></div> : null\r\n)\r\n\r\nexport default Backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\n\r\nconst SideDrawer = ({closeSieDrawer, openSideDrawer, isAuth}) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(openSideDrawer) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop \r\n                showBackdrop={openSideDrawer}\r\n                hideBackdrop={closeSieDrawer}/>\r\n                <div className={attachedClasses.join(' ')}\r\n                     onClick={closeSieDrawer}>\r\n                    <div className={classes.Logo}>\r\n                        <Logo/>\r\n                    </div>\r\n                    <nav>\r\n                        <NavigationItems isAuth={isAuth}/>\r\n                    </nav>\r\n                </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        displayingSideDrawer: false\r\n    }\r\n\r\n    closingSideDrawerHandler = () => {\r\n        this.setState({displayingSideDrawer: false})\r\n    }\r\n\r\n    displaySideDrawerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {displayingSideDrawer: !this.state.displayingSideDrawer};\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n        <React.Fragment>\r\n            <Toolbar \r\n            isAuth={this.props.isAuthenticated}\r\n            sideDrawerClicked={this.displaySideDrawerHandler}/>\r\n            <SideDrawer\r\n            isAuth={this.props.isAuthenticated} \r\n            openSideDrawer={this.state.displayingSideDrawer}\r\n            closeSieDrawer={this.closingSideDrawerHandler}/>\r\n            <main className={classes.Content}>{this.props.children}</main>\r\n        </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n        switch(this.props.type) {\r\n            case('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                    );\r\n                break;\r\n            case('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css'\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst Burger = ({ ingredients }) => {\r\n    let transformedIngredients = Object.keys(ingredients)\r\n    .map(ingredientKey => {\r\n        return [...Array(ingredients[ingredientKey])]\r\n        .map((_ , index) => {\r\n             return <BurgerIngredient key={ingredientKey + index} type={ingredientKey} />\r\n        });\r\n    })\r\n    .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        })\r\n    if(transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css'\r\n\r\nconst BuildControl = (props) => {\r\n    const { labelName, add, remove, disabled } = props\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{labelName}</div>\r\n            <button \r\n                className={classes.More} \r\n                onClick={add}>More</button>\r\n            <button \r\n                className={classes.Less}\r\n                onClick={remove}\r\n                disabled={disabled}>Less</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css'\r\nimport BuildControl from './BuildControl/BuildControl'\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Bacon', type: 'bacon'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Meat', type: 'meat'},\r\n];\r\n\r\n\r\nconst BuildControls = (props) => {\r\n    const { addIngredient, removeIngredient, disabled, price, purchaseable, purchaseOrder, isAuth } = props\r\n    return (\r\n        <div className={classes.BuildControls}>\r\n        <p>Current price: <strong>{price.toFixed(2)} $</strong></p>\r\n            {controls.map(ctr => {\r\n                return <BuildControl \r\n                key={ctr.label} \r\n                labelName={ctr.label} \r\n                add={() => addIngredient(ctr.type)}\r\n                remove={() => removeIngredient(ctr.type)}\r\n                disabled={disabled[ctr.type]}    \r\n                />\r\n            })}\r\n            <button \r\n                className={classes.OrderButton}\r\n                disabled={!purchaseable}\r\n                onClick={purchaseOrder}>{isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BuildControls;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport classes from './Modal.module.css'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nconst Modal = ({ show, children, hideBackdrop }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop showBackdrop={show} hideBackdrop={hideBackdrop}/>\r\n            <div \r\n            className={classes.Modal}\r\n            style={{\r\n                transform: show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: show ? '1' : '0'\r\n            }}>\r\n                {children}\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default React.memo(Modal);","import React from 'react';\r\n\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = ({ children, clicked, btnType, disabled }) => (\r\n    <button\r\n        disabled={disabled}\r\n        className={[classes.Button, classes[btnType]].join(' ')}\r\n        onClick={clicked}>{children}</button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button'\r\n\r\nconst OrderSummary = (props) => {\r\n    const { ingredients, cancelPurchase, proceedWithPurchase, price } = props\r\n    const ingredientsSummary = Object.keys(ingredients).map(ingredientKey => {\r\n        return ( \r\n        <li key={ingredientKey}>\r\n            <span style={{textTransform: 'capitalize'}}>{ingredientKey}</span>: {ingredients[ingredientKey]}\r\n        </li> );\r\n    });\r\n    return (\r\n       <React.Fragment>\r\n           <h3>Your Order</h3>\r\n           <p>Delicious burger with the following ingredients:</p>\r\n           <ul>\r\n                {ingredientsSummary}\r\n           </ul>\r\n           <p><strong>Total Price: {price.toFixed(2)} $</strong></p>\r\n           <p>Continue checkout?</p>\r\n           <Button btnType='Danger' clicked={cancelPurchase}>CANCEL</Button>\r\n           <Button btnType='Success' clicked={proceedWithPurchase}>CONTINUE</Button>\r\n       </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OrderSummary;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        componentDidMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        render(){\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal show={this.state.error}\r\n                           hideBackdrop={this.errorConfirmedHandler}>\r\n                            {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                <WrappedComponent {...this.props} />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burger-app-ce2e9.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000)\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC7upwtv2ccsRR_ekQwIrIXHyoiktzH-As'\r\n        if(!isSignUp) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC7upwtv2ccsRR_ekQwIrIXHyoiktzH-As'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                localStorage.setItem('token', response.data.idToken);\r\n                const expirationTime = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('expirationDate', expirationTime);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationTime = new Date(localStorage.getItem('expirationDate'));\r\n            if(expirationTime > new Date()) {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationTime.getTime() - new Date().getTime()) / 1000));\r\n            } else {\r\n                dispatch(logout())\r\n            }\r\n        }\r\n    };\r\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAILED = 'PURCHASE_BURGER_FAILED';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Burger from '../../components/Buger/Burger'\r\nimport BuildControls from '../../components/Buger/BuildControls/BuildControls'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Buger/OrderSummary/OrderSummary'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport axios from '../../axios-orders'\r\n\r\nimport * as actions from '../../store/actions/index'\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false\r\n    }\r\n    componentDidMount() {\r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    purchaseControl = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState({ purchasing: true})\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n    \r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false})\r\n    }\r\n\r\n    purchaseProceedHandler = () => {\r\n        this.props.onPurchaseInit();\r\n        this.props.history.push('/checkout');\r\n    }\r\n    \r\n\r\n    updatePurchaseState = (ingredients) => {\r\n        const ingredientsSum = Object.keys(ingredients).map(ingredientKey => {\r\n            return ingredients[ingredientKey]\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return ingredientsSum > 0;\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ingredients\r\n        }\r\n        for(let key in disabledInfo) {\r\n            // disableInfo[key] = disableInfo[key] <= 0 ? true : false\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let burger = this.props.error ? <p>Ingredients cannot be loaded!</p> : <Spinner />;\r\n        let orderSummary = null;\r\n        if(this.props.ingredients !== null) {\r\n            burger = (\r\n            <React.Fragment>\r\n                <Burger ingredients={this.props.ingredients}/>\r\n                <BuildControls \r\n                addIngredient={this.props.onAddedIngredient}\r\n                removeIngredient={this.props.onRemovedIngredient}\r\n                disabled={disabledInfo}\r\n                purchaseable={this.updatePurchaseState(this.props.ingredients)}\r\n                purchaseOrder={this.purchaseControl}\r\n                isAuth={this.props.isAuthenticated}\r\n                price={this.props.totalPrice} />\r\n            </React.Fragment>\r\n            )\r\n\r\n            orderSummary = (\r\n                <OrderSummary \r\n                    ingredients={this.props.ingredients}\r\n                    price={this.props.totalPrice}\r\n                    proceedWithPurchase={this.purchaseProceedHandler}\r\n                    cancelPurchase={this.purchaseCancelHandler}\r\n                    />\r\n            );\r\n        }\r\n        return (\r\n           <React.Fragment>\r\n                <Modal show={this.state.purchasing} hideBackdrop={this.purchaseCancelHandler}>\r\n                    { orderSummary }\r\n                </Modal>\r\n               {burger}\r\n           </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddedIngredient: ingName => dispatch(actions.addIngredient(ingName)),\r\n        onRemovedIngredient: ingName => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onPurchaseInit: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios))\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = name => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = name => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json').then((response) => {\r\n            dispatch(setIngredients(response.data))\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchIngredientsFailed())\r\n        });\r\n    };\r\n};\r\n\r\n\r\n","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n        axios.get('/orders.json' + queryParams)\r\n            .then(response => {\r\n                const orders = [];\r\n                for( let key in response.data) {\r\n                    orders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(fetchOrdersSuccess(orders));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchOrdersFail(error));\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAILED,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderID: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(err => {\r\n                dispatch(purchaseBurgerFail(err));\r\n            })\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport classes from './CheckoutSummary.module.css';\r\nimport Button from '../../UI/Button/Button';\r\nimport Burger from '../../../components/Buger/Burger';\r\n\r\nconst CheckoutSummary = (props) => {\r\n    const {ingredients, checkoutCancelled, checkoutContinued} = props;\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={ingredients} />\r\n            </div>\r\n            <Button btnType=\"Danger\"\r\n            clicked={checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\"\r\n            clicked={checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckoutSummary;","import React from 'react';\r\nimport classes from './FormInput.module.css'\r\n\r\nconst FormInput = ( props ) => {\r\n    const { elementType, label, elementConfig, value, change, invalid, validationIsRequired, touched} = props;\r\n    let inputElement = null;\r\n    const inputClasses = [classes.Input];\r\n    if(invalid && validationIsRequired && touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    } \r\n    \r\n    switch(elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...elementConfig}\r\n            onChange={change}\r\n            value={value}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n            className={inputClasses.join(' ')} \r\n            {...elementConfig}\r\n            onChange={change} \r\n            value={value}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n            <select\r\n                className={inputClasses.join(' ')}\r\n                onChange={change} \r\n                value={value}>\r\n                {elementConfig.options.map(option => (\r\n                    <option \r\n                        value={option.value} \r\n                        key={option.value}>\r\n                        {option.displayValue}\r\n                    </option>\r\n                ))}\r\n                />;\r\n            </select>\r\n            )\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...elementConfig}\r\n            onChange={change} \r\n            value={value}/>;\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormInput;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport axios from '../../../axios-orders'\r\n\r\nimport classes from './ContactData.module.css'\r\nimport Button from '../../UI/Button/Button'\r\nimport FormInput from '../../UI/FormInput/FormInput'\r\nimport Spinner from '../../UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index'\r\n\r\n\r\n\r\nclass ContactData extends Component {\r\n\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    name: 'name',\r\n                    id: 'name',\r\n                    placeholder: 'Your name...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    name: 'email',\r\n                    id: 'email',\r\n                    placeholder: 'Your email...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    name: 'street',\r\n                    id: 'street',\r\n                    placeholder: 'Street...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    name: 'zipCode',\r\n                    id: 'zipCode',\r\n                    placeholder: 'Zip Code...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 4,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    name: 'country',\r\n                    id: 'country',\r\n                    placeholder: 'Your country...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n   \r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid; \r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for(let formElementIndentifier in this.state.orderForm) {\r\n            formData[formElementIndentifier] = this.state.orderForm[formElementIndentifier].value\r\n        }\r\n\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onPurchaseBurger(order, this.props.token);\r\n    }\r\n\r\n    inputChangeHandler = (event, inputIdentifier) => {\r\n        const copiedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const copiedFromElements = {...copiedOrderForm[inputIdentifier]};\r\n        copiedFromElements.value = event.target.value;\r\n        copiedFromElements.touched = true;\r\n        copiedFromElements.valid = this.checkValidity(copiedFromElements.value, copiedFromElements.validation)\r\n        copiedOrderForm[inputIdentifier] = copiedFromElements;\r\n        \r\n        let formIsValid = true;\r\n        for(let inputIdentifier in copiedOrderForm) {\r\n            formIsValid = copiedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: copiedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render() {\r\n        //creating array from orderForm object in state\r\n        const ordeFormElementsArray = [];\r\n        for( let key in this.state.orderForm ) {\r\n            ordeFormElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let listOfInputFields = ordeFormElementsArray.map(inputElement => {\r\n            return ( <FormInput\r\n                        change={(event) => {this.inputChangeHandler(event, inputElement.id)}}\r\n                        key={inputElement.id} \r\n                        elementType={inputElement.config.elementType} \r\n                        elementConfig= {inputElement.config.elementConfig}\r\n                        invalid={!inputElement.config.valid}\r\n                        touched={inputElement.config.touched}\r\n                        validationIsRequired={inputElement.config.validation}\r\n                        value= {inputElement.config.value}  /> )\r\n        })\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {listOfInputFields}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        )\r\n\r\n        if(this.props.loading) {\r\n            form = <Spinner />;\r\n        }\r\n        \r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onPurchaseBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios))","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from './ContactData/ContactData'\r\n\r\nconst Checkout = (props) => {\r\n    const { history, ingredients, purchased, match } = props;\r\n    const checkoutCancelHandler = () => history.goBack();\r\n    const checkoutContinueHandler = () => history.replace('/checkout/contact-data');\r\n    let checkoutSummary = <Redirect to='/'/>;\r\n    if(ingredients) {\r\n        const purchaseRedirect = purchased ? <Redirect to='/'/> : null\r\n        checkoutSummary = (\r\n            <div>\r\n                { purchaseRedirect }\r\n                <CheckoutSummary\r\n                checkoutCancelled={checkoutCancelHandler}\r\n                checkoutContinued={checkoutContinueHandler}\r\n                ingredients={ingredients}/>\r\n                <Route \r\n                    path={match.path + '/contact-data'} \r\n                    component={ContactData}/>\r\n            </div>\r\n        )\r\n    }\r\n        return checkoutSummary;\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        purchased: state.orders.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst Order = ({ ingredients, price, personName }) => {\r\n    const ingredientsArray = [];\r\n    for (let ingredient in ingredients) {\r\n        ingredientsArray.push(\r\n            {\r\n                ingredientName: ingredient,\r\n                ingredientCount: ingredients[ingredient]\r\n            }\r\n        )\r\n    }\r\n    const ingredientsOutput = ingredientsArray.map(ing => {\r\n        return (\r\n            <span \r\n                style={{textTransform: 'capitalize',\r\n                        dislay: 'inline-block',\r\n                        margin: '0 8px',\r\n                        border: '1px solid #ccc',\r\n                        padding: '5px'}}\r\n                key={ing.ingredientName}>\r\n                {ing.ingredientName}: (+{ing.ingredientCount})\r\n            </span>\r\n        )\r\n    })\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientsOutput}</p>\r\n            <p>Price <strong>USD {Number.parseFloat(price).toFixed(2)}</strong></p>\r\n            <p>Order by: <strong>{personName}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Order;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Order from '../../components/Order/Order/Order'\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if(!this.props.loading) {\r\n            orders = (\r\n                <div>\r\n                    {this.props.orders.map(order => (\r\n                         <Order \r\n                            ingredients={order.ingredients} \r\n                            price={order.price} \r\n                            key={order.id}\r\n                            personName={order.orderData.name}\r\n                            />\r\n                        \r\n                    ))}\r\n                </div>\r\n            )\r\n        }\r\n        return orders;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapToDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapToDispatchToProps)(withErrorHandler(Orders, axios))\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport classes from './Auth.module.css'\r\nimport Input from '../../components/UI/FormInput/FormInput'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email Adress'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignUp: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n   \r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n        if(rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if(rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid; \r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    inputChangeHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp)\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignUp: !prevState.isSignUp};\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        let form = formElementsArray.map(inputElement => {\r\n            return <Input \r\n                        key={inputElement.id} \r\n                        elementType={inputElement.config.elementType} \r\n                        elementConfig= {inputElement.config.elementConfig}\r\n                        invalid={!inputElement.config.valid}\r\n                        touched={inputElement.config.touched}\r\n                        validationIsRequired={inputElement.config.validation}\r\n                        value= {inputElement.config.value}\r\n                        change={(event) => {this.inputChangeHandler(event, inputElement.id)}}/> \r\n        })\r\n\r\n        if(this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n        if(this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n            {authRedirect}\r\n            {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType='Success'>SUBMIT</Button>\r\n                </form>\r\n                    <Button\r\n                        clicked={this.switchAuthModeHandler}\r\n                        btnType='Danger'>SWITCH TO {this.state.isSignUp ? 'SIGN IN' : 'SIGN UP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../store/actions/index'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    }\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Layout from './containers/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './components/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index'\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route exact path=\"/\" component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    \n    if(this.props.isAuthenticated) {\n          routes = (\n         <Switch>\n            <Route exact path=\"/\" component={BurgerBuilder} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/auth\" component={Auth} />\n            <Redirect to=\"/\" />\n          </Switch>)\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToPoprs = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToPoprs, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\n","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility/utility'\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 3.99,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 1.2,\r\n    bacon: 1.2,\r\n    meat: 2.2\r\n}\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState =  {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState)\r\n}\r\n\r\nconst removeIngredient = (state, action) => {\r\n    if(state.ingredients[action.ingredientName] <= 0) {\r\n        return;\r\n    }\r\n    const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState =  {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject(state, updatedState)\r\n}\r\n\r\nconst setInitialIngredients = (state, action) => {\r\n     return updateObject(state, {\r\n        ingredients: {\r\n            ...state.ingredients,\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 3.99,\r\n        error: false,\r\n        building: false\r\n    })\r\n}\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, {error: true});\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient( state, action );\r\n        case actionTypes.SET_INGREDIENTS: return setInitialIngredients( state, action );\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed( state, action );\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility/utility'\r\n\r\nconst initialState = {\r\n    purchased: false,\r\n    loading: false,\r\n    orders: []\r\n}\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const orderWithId = updateObject(action.orderData, {id: action.orderID});\r\n    return updateObject(state, \r\n        { \r\n        loading: false, \r\n        purchased: true,\r\n        orders: state.orders.concat(orderWithId)\r\n        })\r\n}\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, {purchased: false});\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, {loading: true});\r\n}\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject(state, {loading: false});\r\n}\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {loading: false, orders: action.orders});\r\n}\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action);\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action);\r\n        case actionTypes.PURCHASE_BURGER_FAILED: return purchaseBurgerFail(state, action);\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action);\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action);\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action);\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\r\nimport { updateObject } from '../utility/utility'\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {error: null, loading: true});\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null, \r\n        loading: false});\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error, \r\n        loading: false});\r\n}\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        token: null, \r\n        userId: null});\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, {authRedirectPath: action.path});\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from 'redux-thunk';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport ordersReducer from './store/reducers/orders'\nimport authReducer from './store/reducers/auth'\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    orders: ordersReducer,\n    auth:authReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n  ));\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <BrowserRouter>\n      <App /> \n    </BrowserRouter>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}